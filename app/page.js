"use client"
import { useState } from "react";
import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from "recharts";
import Link from "next/link";
import './globals.css'

const data = [
  [3, 9, 27, 30, 33],
  [21, 22, 25, 30, 37],
  [1, 5, 21, 32, 37],
  [11, 27, 28, 29, 37],
  [10, 11, 14, 21, 33],
  [1, 16, 33, 37, 39],
  [7, 22, 35, 38, 39],
  [9, 17, 19, 23, 27],
  [3, 6, 15, 19, 24],
  [15, 23, 34, 36, 37],
  [1, 3, 12, 23, 31],
  [14, 20, 27, 33, 38],
  [1, 3, 10, 11, 35],
  [2, 5, 9, 27, 29],
  [10, 17, 32, 38, 39],
  [10, 27, 31, 32, 33],
  [2, 3, 13, 17, 35],
  [15, 20, 28, 36, 37],
  [3, 15, 17, 25, 36],
  [8, 16, 18, 19, 35],
  [4, 12, 29, 33, 36],
  [1, 14, 32, 34, 36],
  [6, 9, 12, 22, 31],
  [1, 8, 9, 30, 35],
  [1, 3, 18, 22, 28],
  [3, 11, 21, 23, 36],
  [6, 10, 21, 32, 38],
  [10, 17, 19, 29, 37],
  [10, 22, 26, 32, 33],
  [14, 20, 21, 23, 34],
  [12, 15, 16, 23, 28],
  [6, 13, 16, 32, 39],
  [6, 11, 15, 28, 31],
  [20, 25, 31, 35, 38],
  [6, 20, 22, 36, 37],
  [3, 18, 19, 21, 22],
  [6, 8, 22, 29, 38],
  [23, 24, 28, 30, 31],
  [4, 16, 27, 30, 37],
  [2, 4, 15, 17, 30],
  [7, 11, 16, 34, 36],
  [12, 18, 31, 38, 39],
  [5, 9, 17, 24, 25],
  [21, 26, 29, 30, 34],
  [1, 3, 4, 35, 37],
  [3, 5, 12, 15, 33],
  [1, 3, 15, 18, 35],
  [2, 7, 10, 15, 33],
  [23, 25, 29, 31, 32],
  [11, 27, 30, 31, 38],
  [7, 14, 28, 29, 38],
  [7, 15, 22, 26, 37],
  [5, 12, 13, 21, 36],
  [17, 19, 29, 36, 37],
  [1, 3, 5, 19, 38],
  [26, 34, 36, 37, 39],
  [9, 19, 23, 36, 38],
  [2, 6, 20, 23, 36],
  [8, 11, 15, 20, 36],
  [5, 10, 27, 37, 38],
  [2, 8, 16, 18, 36],
  [12, 21, 23, 38, 39],
  [8, 12, 22, 35, 36],
  [18, 19, 22, 26, 28],
  [7, 8, 9, 14, 34],
  [2, 6, 16, 27, 39],
  [11, 16, 18, 19, 25],
  [10, 16, 26, 38, 39],
  [5, 24, 29, 34, 35],
  [1, 2, 4, 13, 27],
  [7, 11, 12, 24, 38],
  [7, 17, 27, 28, 33],
  [4, 11, 20, 34, 36],
  [5, 7, 30, 35, 38],
  [10, 21, 23, 27, 30],
  [1, 10, 16, 26, 29],
  [11, 12, 18, 23, 24],
  [2, 12, 15, 24, 35],
  [5, 9, 14, 20, 33],
  [4, 10, 12, 23, 26],
  [1, 3, 6, 21, 27],
  [8, 14, 22, 27, 35],
  [1, 13, 31, 34, 35],
  [4, 7, 15, 22, 30],
  [3, 9, 21, 27, 36],
  [12, 21, 24, 25, 39],
  [2, 3, 21, 26, 30],
  [13, 15, 18, 19, 33],
  [1, 3, 10, 14, 31],
  [1, 2, 9, 19, 31],
  [3, 9, 10, 13, 17],
  [6, 17, 21, 26, 28],
  [15, 28, 35, 36, 39],
  [6, 13, 15, 25, 28],
  [2, 10, 21, 22, 38],
  [3, 12, 20, 34, 35],
  [6, 14, 20, 28, 35],
  [17, 18, 32, 35, 37],
  [3, 6, 10, 17, 28],
  [16, 20, 21, 22, 25],
  [10, 14, 25, 31, 36],
  [9, 15, 22, 34, 36],
  [4, 10, 12, 21, 27],
  [3, 7, 12, 17, 37],
  [9, 24, 32, 36, 39],
  [3, 6, 13, 28, 35],
  [5, 6, 11, 16, 37],
  [2, 7, 13, 18, 28],
  [12, 28, 31, 35, 39],
  [4, 9, 18, 25, 39],
  [12, 13, 16, 26, 37],
  [5, 6, 11, 31, 35],
  [1, 12, 31, 38, 39],
  [1, 7, 11, 15, 29],
  [4, 14, 33, 36, 37],
  [7, 11, 18, 20, 22],
  [4, 6, 14, 26, 33],
  [9, 10, 21, 33, 35],
  [14, 19, 27, 30, 38],
  [5, 10, 11, 32, 37],
  [3, 5, 28, 32, 34],
  [1, 3, 16, 24, 31],
  [11, 13, 15, 23, 29],
  [14, 23, 26, 27, 34],
  [5, 16, 22, 26, 39],
  [1, 15, 32, 34, 38],
  [5, 13, 14, 17, 24],
  [16, 23, 29, 36, 39],
  [1, 7, 9, 20, 32],
  [2, 9, 32, 36, 37],
  [8, 12, 13, 23, 36],
  [4, 20, 24, 28, 38],
  [6, 10, 21, 24, 31],
  [7, 11, 17, 23, 25],
  [3, 4, 6, 14, 20],
  [3, 11, 20, 21, 36],
  [1, 4, 27, 34, 35],
  [11, 19, 24, 31, 32],
  [18, 19, 30, 33, 38],
  [3, 13, 26, 32, 34],
  [14, 19, 20, 29, 32],
  [3, 12, 17, 30, 38],
  [1, 2, 17, 20, 37],
  [5, 8, 35, 36, 37],
  [2, 8, 26, 32, 34],
  [2, 9, 15, 29, 38],
  [2, 10, 11, 14, 22],
  [12, 13, 16, 20, 32],
  [10, 12, 15, 16, 23],
  [1, 21, 22, 25, 27],
  [3, 13, 17, 32, 39],
  [25, 26, 32, 36, 37],
  [2, 21, 37, 38, 39],
  [15, 18, 27, 28, 31],
  [12, 16, 25, 27, 39],
  [2, 17, 26, 33, 35],
  [8, 11, 17, 19, 23],
  [3, 15, 16, 20, 22],
  [4, 20, 25, 33, 34],
  [9, 12, 15, 26, 33],
  [17, 18, 23, 24, 28],
  [4, 21, 24, 33, 35],
  [11, 17, 20, 22, 29],
  [2, 13, 31, 33, 36],
  [1, 9, 14, 31, 33],
  [1, 2, 13, 23, 37],
  [8, 17, 18, 19, 36],
  [16, 21, 23, 29, 30],
  [1, 19, 22, 25, 37],
  [7, 24, 26, 34, 36],
  [8, 10, 26, 28, 37],
  [5, 17, 24, 33, 34],
  [14, 19, 24, 30, 36],
  [1, 11, 27, 29, 31],
  [6, 20, 26, 30, 34],
  [7, 11, 12, 37, 38],
  [2, 3, 21, 23, 34],
  [1, 9, 17, 18, 39],
  [11, 12, 18, 20, 36],
  [1, 11, 15, 18, 37],
  [1, 12, 14, 24, 30],
  [2, 4, 16, 29, 38],
  [12, 18, 36, 37, 38],
  [12, 24, 27, 30, 35],
  [1, 19, 22, 24, 38],
  [11, 12, 26, 27, 32],
  [6, 7, 11, 17, 36],
  [1, 6, 12, 29, 37],
  [4, 5, 16, 19, 30],
  [2, 9, 13, 19, 28],
  [2, 7, 8, 10, 12],
  [1, 21, 28, 38, 39],
  [8, 12, 24, 28, 34],
  [9, 15, 20, 28, 32],
  [6, 9, 24, 30, 34],
  [7, 14, 20, 27, 39],
  [9, 17, 18, 32, 35],
  [6, 14, 32, 33, 36],
  [2, 9, 12, 16, 36],
  [7, 28, 30, 34, 39],
  [1, 2, 12, 13, 22],
  [2, 8, 16, 34, 37],
  [9, 11, 30, 34, 39],
  [25, 26, 28, 29, 37],
  [5, 9, 11, 23, 33],
  [5, 13, 21, 34, 35],
  [6, 16, 34, 35, 36],
  [4, 21, 26, 29, 36],
  [3, 5, 14, 22, 36],
  [9, 15, 21, 36, 37],
  [16, 20, 24, 31, 37],
  [11, 14, 19, 23, 24],
  [9, 26, 27, 31, 35],
  [10, 13, 27, 32, 37],
  [14, 27, 31, 36, 39],
  [5, 9, 28, 36, 38],
  [5, 16, 17, 36, 37],
  [6, 34, 35, 36, 39],
  [5, 8, 14, 20, 26],
  [3, 8, 13, 27, 33],
  [6, 8, 25, 37, 39],
  [3, 29, 34, 35, 37],
  [12, 15, 18, 19, 26],
  [7, 9, 31, 38, 39],
  [2, 9, 16, 18, 23],
  [16, 19, 22, 26, 37],
  [4, 7, 30, 32, 38],
  [9, 22, 25, 35, 39],
  [4, 12, 14, 17, 35],
  [4, 10, 19, 30, 31],
  [2, 5, 10, 12, 37],
  [4, 6, 14, 16, 20],
  [3, 27, 34, 37, 39],
  [10, 20, 24, 35, 39],
  [7, 10, 24, 27, 31],
  [20, 23, 30, 31, 35],
  [7, 8, 13, 22, 34],
  [1, 6, 15, 19, 39],
  [5, 11, 27, 38, 39],
  [2, 5, 8, 14, 32],
  [2, 10, 17, 21, 39],
  [1, 11, 13, 25, 37],
  [12, 17, 25, 31, 34],
  [3, 25, 29, 35, 38],
  [14, 15, 16, 24, 29],
  [14, 21, 22, 23, 35],
  [4, 14, 19, 25, 32],
  [2, 19, 27, 33, 35],
  [15, 20, 27, 30, 31],
  [1, 18, 21, 36, 37],
  [4, 11, 26, 34, 38],
  [11, 15, 24, 36, 37],
  [1, 9, 17, 31, 35],
  [7, 16, 25, 32, 34],
  [10, 18, 19, 26, 37],
  [1, 4, 8, 20, 22],
  [6, 8, 15, 28, 39],
  [13, 15, 18, 26, 28],
  [1, 6, 13, 22, 39],
  [9, 12, 25, 29, 35],
  [10, 11, 17, 24, 33],
  [8, 13, 25, 36, 38],
  [4, 8, 11, 19, 31],
  [6, 7, 16, 37, 38],
  [3, 7, 10, 26, 35],
  [1, 8, 18, 27, 30],
  [6, 11, 14, 18, 22],
  [6, 10, 20, 25, 32],
  [1, 9, 13, 31, 32],
  [2, 3, 10, 21, 36],
  [7, 14, 20, 24, 26],
  [5, 8, 17, 24, 28],
  [3, 11, 18, 21, 35],
  [5, 11, 17, 25, 30],
  [2, 18, 27, 29, 39],
  [4, 24, 29, 33, 37],
  [3, 5, 23, 26, 27],
  [10, 14, 21, 32, 33],
  [13, 20, 30, 31, 33],
  [4, 12, 13, 23, 25],
  [3, 7, 8, 17, 30],
  [3, 13, 28, 29, 38],
  [3, 6, 19, 20, 38],
  [1, 5, 11, 27, 29],
  [7, 13, 14, 21, 35],
  [5, 9, 20, 29, 34],
  [3, 11, 18, 25, 35],
  [4, 11, 16, 17, 24],
  [5, 13, 23, 29, 38],
  [7, 12, 15, 16, 18],
  [12, 27, 33, 35, 38],
  [5, 19, 23, 28, 39],
  [2, 15, 20, 33, 38],
  [6, 24, 31, 32, 33],
  [8, 9, 20, 28, 32],
  [7, 12, 13, 21, 24],
  [4, 22, 32, 34, 37],
  [2, 11, 16, 23, 29],
  [2, 9, 20, 34, 38],
  [3, 7, 8, 12, 35],
  [5, 11, 21, 23, 26],
  [3, 5, 7, 16, 31],
  [3, 24, 27, 33, 37],
  [7, 8, 11, 27, 33],
  [3, 9, 16, 19, 26],
  [12, 13, 14, 18, 32],
  [2, 6, 13, 18, 22],
  [1, 14, 15, 28, 39],
  [6, 18, 21, 29, 38],
  [5, 7, 12, 20, 38],
  [7, 15, 19, 20, 38],
  [17, 18, 24, 26, 30],
  [3, 20, 23, 27, 31],
  [11, 15, 32, 33, 34],
  [2, 7, 8, 10, 14],
  [12, 26, 30, 32, 33],
  [5, 6, 8, 11, 14],
  [8, 9, 12, 21, 23],
  [7, 21, 22, 27, 35],
  [13, 23, 27, 31, 37],
  [12, 18, 20, 24, 31],
  [2, 8, 19, 21, 29],
  [9, 11, 15, 18, 20],
  [5, 12, 13, 19, 34],
  [4, 12, 28, 35, 38],
  [10, 22, 31, 35, 36],
  [3, 21, 22, 26, 39],
  [9, 13, 23, 29, 34],
  [4, 7, 8, 24, 26],
  [7, 12, 18, 35, 39],
  [3, 12, 19, 32, 34],
  [1, 14, 18, 19, 22],
  [6, 19, 23, 26, 30],
  [4, 7, 17, 22, 35],
  [5, 9, 12, 14, 31],
  [1, 7, 32, 36, 37],
  [7, 8, 9, 17, 20],
  [1, 6, 16, 26, 31],
  [13, 22, 23, 24, 35],
  [4, 11, 25, 31, 32],
  [9, 11, 14, 18, 27],
  [1, 5, 9, 14, 26],
  [1, 10, 23, 32, 37],
  [9, 16, 29, 32, 39],
  [4, 16, 21, 23, 37],
  [1, 8, 16, 19, 31],
  [6, 7, 8, 14, 39],
  [3, 7, 22, 29, 34],
  [16, 21, 26, 29, 37],
  [8, 24, 28, 37, 38],
  [4, 5, 27, 35, 37],
  [12, 22, 26, 28, 35],
  [10, 18, 19, 27, 28],
  [2, 6, 19, 28, 29],
  [2, 7, 11, 20, 30],
  [11, 17, 29, 34, 39],
  [6, 8, 10, 21, 26],
  [9, 15, 29, 30, 39],
  [10, 12, 13, 19, 33],
  [3, 27, 28, 33, 38],
  [3, 7, 17, 24, 27],
  [11, 13, 18, 30, 35],
  [4, 7, 11, 19, 22],
  [8, 17, 18, 24, 36],
  [5, 11, 26, 33, 35],
  [3, 11, 24, 27, 36],
  [11, 12, 20, 28, 29],
  [5, 27, 31, 38, 39],
  [4, 16, 29, 31, 34],
  [8, 9, 12, 22, 27],
  [11, 18, 21, 23, 36],
  [15, 23, 29, 36, 39],
  [8, 12, 15, 18, 34],
  [9, 10, 19, 33, 35],
  [17, 23, 24, 27, 35],
  [2, 4, 7, 25, 37],
  [2, 21, 24, 27, 31],
  [6, 14, 27, 30, 33],
  [3, 4, 7, 11, 30],
  [6, 8, 18, 19, 28],
  [8, 15, 25, 26, 34],
  [7, 11, 13, 26, 30],
  [3, 13, 15, 19, 25],
  [11, 15, 25, 29, 34],
  [2, 16, 17, 27, 32],
  [5, 9, 15, 20, 26],
  [5, 13, 14, 26, 28],
  [7, 25, 32, 34, 35],
]




export default function LotteryAnalyzer() {
  const [searchNums, setSearchNums] = useState(["", "", "", "", ""]);
  const data1 = [
    [1, 12, 23, 34, 35],
    [5, 11, 19, 23, 37],
    [3, 8, 14, 23, 32],
    [7, 12, 18, 27, 31],
    [2, 9, 21, 23, 30],
  ]; // 模擬的開獎數據

  const handleInputChange = (index, value) => {
    const newSearchNums = [...searchNums];
    newSearchNums[index] = value;
    setSearchNums(newSearchNums);
  };

  // 計算號碼出現頻率
  const numberFrequency = {};
  data.flat().forEach((num) => {
    numberFrequency[num] = (numberFrequency[num] || 0) + 1;
  });
  const frequencyData = Object.entries(numberFrequency).map(([num, count]) => ({
    number: num,
    count,
  }));

  // 找出熱號 & 冷號
  const sortedNumbers = Object.entries(numberFrequency).sort((a, b) => b[1] - a[1]);
  const hotNumbers = sortedNumbers.slice(0, 3).map(([num]) => num);
  const coldNumbers = sortedNumbers.slice(-3).map(([num]) => num);

  // 連續號碼分析
  const consecutivePairs = {};
  data.forEach((row) => {
    row.sort((a, b) => a - b);
    for (let i = 0; i < row.length - 1; i++) {
      if (row[i] + 1 === row[i + 1]) {
        const pair = `${row[i]}-${row[i + 1]}`;
        consecutivePairs[pair] = (consecutivePairs[pair] || 0) + 1;
      }
    }
  });
  const consecutiveData = Object.entries(consecutivePairs)
    .map(([pair, count]) => ({ pair, count }))
    .sort((a, b) => b.count - a.count); // 排序：出現次數從高到低

  return (
    <div className="p-4">
      <nav className="bg-blue-600 p-4 text-white flex space-x-4">
        <Link href="/">
          <div className="hover:underline">首頁</div>
        </Link>
        <Link href="/539">
          <div className="hover:underline">開獎結果</div>
        </Link>
        {/* <Link href="/stats">
          <div className="hover:underline">統計分析</div>
        </Link> */}
      </nav>
      <h1 className="text-xl font-bold mb-4">539 彩票數據分析</h1>
      <Link href="/539">
        <button>539</button>
      </Link>
      {/* 號碼出現頻率長條圖 */}
      <h2 className="text-lg font-semibold mb-2">號碼出現頻率</h2>
      <ResponsiveContainer width="100%" height={300}>
        <BarChart data={frequencyData}>
          <XAxis dataKey="number" />
          <YAxis />
          <Tooltip />
          <Bar dataKey="count" fill="#8884d8" />
        </BarChart>
      </ResponsiveContainer>

      {/* 熱號 & 冷號顯示 */}
      <div className="mt-6">
        <h2 className="text-lg font-semibold">🔥 熱門號碼</h2>
        <p className="text-red-500 text-xl">{hotNumbers.join(", ")}</p>
      </div>
      <div className="mt-4">
        <h2 className="text-lg font-semibold">❄️ 冷門號碼</h2>
        <p className="text-blue-500 text-xl">{coldNumbers.join(", ")}</p>
      </div>


      {/* 連續號碼分析 */}
      <div className="mt-6">
        <h2 className="text-lg font-semibold">🔗 連續號碼分析</h2>
        {consecutiveData.length > 0 ? (
          <ul className="list-disc pl-6">
            {consecutiveData.map(({ pair, count }, index) => (
              <li key={index} className="text-gray-700">
                {pair} 出現 {count} 次
              </li>
            ))}
          </ul>
        ) : (
          <p className="text-gray-500">沒有連續號碼</p>
        )}
      </div>
    </div>
  );
}